apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: '1'
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"demo-app-canary","namespace":"app"},"spec":{"replicas":3,"selector":{"matchLabels":{"app":"demo-app-canary","seb":"oui"}},"template":{"metadata":{"labels":{"app":"demo-app-canary","seb":"oui"}},"spec":{"containers":[{"image":"382076407153.dkr.ecr.eu-west-1.amazonaws.com/demo-app:v2.0.1","imagePullPolicy":"Always","name":"demo-app","ports":[{"containerPort":8080,"name":"http"}]}],"serviceAccountName":"app-envoy-proxies"}}}}
  creationTimestamp: '2023-01-30T13:21:56Z'
  generation: 1
  name: demo-app-canary
  namespace: app
  resourceVersion: '28822246'
  uid: a351d098-1a6f-4b89-b2bd-72de5e73463a
spec:
  progressDeadlineSeconds: 600
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: demo-app-canary
      seb: oui
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: demo-app-canary
        seb: oui
    spec:
      containers:
        - image: 382076407153.dkr.ecr.eu-west-1.amazonaws.com/demo-app:v2.0.1
          imagePullPolicy: Always
          name: demo-app
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: app-envoy-proxies
      serviceAccountName: app-envoy-proxies
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualNode
metadata:
  name: my-vn-stable
  namespace: app
spec:
  podSelector:
    matchLabels:
      app: demo-app-canary
      seb: oui
  listeners:
    - portMapping:
        port: 8080
        protocol: http
  serviceDiscovery:
    dns:
      hostname: my-svc-stable.app.svc.cluster.local
